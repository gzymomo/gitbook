#user  nobody;

error_log logs/error.log;
#错误日志位置和日志级别，如果使用默认编译选项，位置为/usr/local/nginx/logs/error.log，error表示只打印错误日志
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

worker_processes 1; #Nginx开启4个子进程，子进程个数最好跟CPU的核心数一样
#worker_cpu_affinity 0001 0010 0100 1000; 
#CPU的mask，子进程使用它来绑定CPU核心，避免进程切换造成性能损失 
#1.9.10以及之后的版本

events {
  worker_connections 1024; #Nginx处理的最大连接数
}

#rtmp_auto_push on;
#rtmp_auto_push_reconnect 1s;
#rtmp_socket_dir /tmp;

rtmp {
  #max_streams 64; #Nginx能接受的最大的推流数

  server {
    listen 1935; #Nginx监听的RTMP推流/拉流端口，可以省略，默认监听1935
    access_log logs/rtmp_access.log;
   # chunk_size 4096;

    application rtmp {
      live on; #当推流时，RTMP路径中的APP（RTMP中一个概念）匹配rtmp时，开启直播
      #gop_cache on; #开启GOP（Group of Picture）缓存，播放器解码时，收到一个完整的GOP才会开始播放，这个是减少播放延迟的选项
      notify_method get;
      on_play http://192.168.0.141:7081/rtmp/on_play;
      on_publish http://192.168.0.141:7081/rtmp/on_publish;
      on_done http://192.168.0.141:7081/rtmp/on_done;
      on_play_done http://192.168.0.141:7081/rtmp/on_play_done;
      on_publish_done http://192.168.0.141:7081/rtmp/on_publish_done;
      on_record_done http://192.168.0.141:7081/rtmp/on_record_done;
      on_update http://192.168.0.141:7081/rtmp/on_update;
      notify_update_timeout 30s;
    }

    application vod {
      play /opt/video/vod;
    }

    application myapp {
      live on;
	  #gop_cache on; #打开GOP缓存，减少首屏等待时间
    }

    #hls配置
    application hls {
      live on;
      hls on;
      hls_path /opt/video/hls;
    }
  }
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;
  #server_names_hash_bucket_size 128;
  #client_header_buffer_size 32k;
  #large_client_header_buffers 4 32k;

  #gzip on;
  #gzip_min_length 1k;
  #gzip_buffers 4 16k;
  #gzip_comp_level 2;
  #gzip_types text/plain application/x-javascript text/css application/xml;
  #gzip_vary on;

  #output_buffers 1 32k;
  #postpone_output 1460;
  #client_header_timeout 3m;
  #client_body_timeout 3m;
  #send_timeout 3m;
  #tcp_nopush on;
  #tcp_nodelay on;

  server {
    listen 80; #Nginx监听的HTTP请求端口
    server_name localhost;

    charset utf-8;

    location /stat {
      rtmp_stat all;
      rtmp_stat_stylesheet stat.xsl;
    }
    location /stat.xsl {
      root /usr/local/nginx/nginx-http-flv-module;
    }
    location / {
      root html;
      index index.html index.htm;
    }
    #配置hls
    location /hls {
      types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
      }
      root /opt/video/hls/;
      add_header Cache-Control no-cache;
    }

    location /mp4 {
      root /opt/video/mp4/;
    }

    location /flv {
      root /opt/video/flv/;
    }

    location /live {
      flv_live on; #当HTTP请求以/live结尾，匹配这儿，这个选项表示开启了flv直播播放功能
	  #chunked_transfer_encoding  on;
	  #add_header 'Access-Control-Allow-Origin' '*';
	  #add_header 'Access-Control-Allow-Credentials' 'true';
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }
}
